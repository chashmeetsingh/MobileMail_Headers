//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "MFDiagnosticsGenerator.h"
#import "MFTableViewPrefetchProvider.h"
#import "MessageSelectionDataSource.h"
#import "MiniMallSourceBulkOperationsDelegate.h"

@class MFActivityMonitor, MFMailMessage, MFMessageInfoOrderedSet, MFMessageMiniMallSendersCache, MessageSelectionStrategy, NSDictionary, NSMutableSet, NSObject<OS_dispatch_queue>, NSString, SourceSearchContext;

@interface MessageMiniMall : NSObject <MFDiagnosticsGenerator, MessageSelectionDataSource, MiniMallSourceBulkOperationsDelegate, MFTableViewPrefetchProvider>
{
    int _suspendCount;
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableSet *_sources;
    NSMutableSet *_emptiedSources;
    struct __CFDictionary *_messageCollections;
    MFMessageInfoOrderedSet *_messageInfoSet;
    unsigned long long _messageCountInCollections;
    MFActivityMonitor *_fetchActivity;
    _Bool _userRefresh;
    NSDictionary *_maximumIndexPathsBySource;
    struct __CFDictionary *_sourceShouldGrowCache;
    struct __CFDictionary *_growingMailboxesByActivity;
    MessageSelectionStrategy *_selectionStrategy;
    MFMailMessage *_currentMessage;
    int _lastChangeDirection;
    SourceSearchContext *_searchContext;
    CDUnknownBlockType _comparator;
    unsigned long long _tag;
    CDUnknownBlockType _duplicatePreferenceComparator;
    CDUnknownBlockType _outgoingIndexPathMapper;
    CDUnknownBlockType _incomingIndexPathMapper;
    CDUnknownBlockType _incomingIndexPathValidator;
    CDUnknownBlockType _growthThresholdComparator;
    id _context;
    MFMessageMiniMallSendersCache *_senderCache;
}

+ (CDUnknownBlockType)messageInfosTransformForConversationID:(long long)arg1;
@property(retain) MFMessageMiniMallSendersCache *senderCache; // @synthesize senderCache=_senderCache;
@property(retain, nonatomic) id context; // @synthesize context=_context;
@property(copy, nonatomic) CDUnknownBlockType growthThresholdComparator; // @synthesize growthThresholdComparator=_growthThresholdComparator;
@property(copy, nonatomic) CDUnknownBlockType incomingIndexPathValidator; // @synthesize incomingIndexPathValidator=_incomingIndexPathValidator;
@property(copy, nonatomic) CDUnknownBlockType incomingIndexPathMapper; // @synthesize incomingIndexPathMapper=_incomingIndexPathMapper;
@property(copy, nonatomic) CDUnknownBlockType outgoingIndexPathMapper; // @synthesize outgoingIndexPathMapper=_outgoingIndexPathMapper;
@property(copy, nonatomic) CDUnknownBlockType duplicatePreferenceComparator; // @synthesize duplicatePreferenceComparator=_duplicatePreferenceComparator;
@property(nonatomic) unsigned long long tag; // @synthesize tag=_tag;
- (id)tableViewPrefetcher:(id)arg1 prefetchOperationAtIndexPath:(id)arg2;
- (void)_cacheHeadersForMessageInfo:(id)arg1;
- (void)_cacheSendersForMessageInfo:(id)arg1;
- (void)_cacheMessageForMessageInfo:(id)arg1;
- (id)_messageCollectionInfoForForHash:(long long)arg1 createIfNeeded:(_Bool)arg2;
- (id)_messageCollectionInfoForMessageInfo:(id)arg1 createIfNeeded:(_Bool)arg2;
- (id)_messageCollectionInfoForHash:(long long)arg1;
- (id)_conversationWithID:(long long)arg1;
- (id)_messageCollectionInfoForMessage:(id)arg1;
- (id)_messageCollectionInfoForMessageInfo:(id)arg1;
- (long long)_messageCollectionHashForMessage:(id)arg1;
- (long long)_messageCollectionHashForMessageInfo:(id)arg1;
- (id)copyDiagnosticInformation;
- (_Bool)_hasOnlyThreadedSources;
@property(readonly, nonatomic) _Bool allSourcesThreadMessages;
- (unsigned long long)sourceType;
- (_Bool)isInCombinedMailboxOfType:(int)arg1;
- (_Bool)isInCombinedInbox;
- (_Bool)shouldPopOnZeroMessages;
- (_Bool)shouldArchiveByDefaultForTableIndexPath:(id)arg1;
- (_Bool)supportsArchivingForTableIndexPath:(id)arg1;
- (_Bool)deleteMovesToTrashForTableIndexPath:(id)arg1;
- (struct __CFDictionary *)_copyMessageInfosBySourceForTableIndexPath:(id)arg1;
- (_Bool)archiveByDefaultForMessage:(id)arg1;
- (_Bool)archivesByDefault;
- (_Bool)supportsArchivingForMessage:(id)arg1;
- (_Bool)supportsArchiving;
- (_Bool)deleteMovesToTrashForMessage:(id)arg1;
- (_Bool)deleteMovesToTrash;
- (id)_copySources;
- (void)_flagsChangedForMessages:(id)arg1 flags:(id)arg2 source:(id)arg3 group:(id)arg4;
- (void)_filterTaskCompletedWithContext:(id)arg1;
- (id)_removeMessages:(id)arg1;
- (id)_addMessages:(id)arg1;
- (void)_synchronouslyFilterMessages:(id)arg1 fromSource:(id)arg2 operation:(unsigned long long)arg3;
- (void)_loadNonGroupedMessages:(id)arg1;
- (void)_loadGroupedMessages:(id)arg1;
- (_Bool)_loadMessages;
- (_Bool)ensureWeHaveLoadedMessages;
- (void)_scheduleEnsureWeHaveLoadedMessages;
- (id)_indexPathsFromIndexes:(id)arg1;
- (void)_protectedDataForMailboxWasReconciled:(id)arg1;
- (void)_protectedDataWasReconciled:(id)arg1;
- (void)_protectedDataWillBecomeUnavailable:(id)arg1;
- (void)_sourceDidFinishSearch:(id)arg1;
- (void)_sourceDidReload:(id)arg1;
- (void)_conversationHasMerged:(id)arg1;
- (void)_messageFlagsChanged:(id)arg1;
- (void)_messagesCompacted:(id)arg1;
- (void)_messagesAdded:(id)arg1;
- (void)_checkServerCount:(id)arg1;
- (void)flushCaches;
- (void)applicationDidResume;
- (void)applicationWillSuspend;
- (_Bool)areAnySourcesSearching;
@property(copy) SourceSearchContext *searchContext;
- (id)startSearchWithContext:(id)arg1;
- (void)_applyPendingChangesLocally:(id)arg1;
- (void)_addChangeSetToManager:(id)arg1;
- (void)_applyOperation:(id)arg1 onMessages:(id)arg2 removalTest:(CDUnknownBlockType)arg3;
- (void)markMessagesAsViewed:(id)arg1;
- (void)markMessagesAsNotViewed:(id)arg1;
- (void)markMessagesAsFlagged:(id)arg1;
- (void)markMessagesAsNotFlagged:(id)arg1;
- (void)markMessagesAsJunk:(id)arg1;
- (void)markMessagesAsNotJunk:(id)arg1;
- (void)markAllMessagesAsNotViewed;
- (void)markAllMessagesAsViewed;
- (void)markAllMessagesAsNotFlagged;
- (void)markAllMessagesAsFlagged;
- (void)didDeleteAllMessagesInSource:(id)arg1;
- (void)markAllMessagesAsDeletedOrArchived:(unsigned long long)arg1;
- (void)performDestructiveChange:(id)arg1;
- (id)emptyMailboxString;
- (_Bool)shouldShowEmptyMailboxString;
- (id)titleWithUnreadCount:(unsigned long long)arg1 options:(unsigned long long)arg2;
- (unsigned long long)senderCount;
- (unsigned long long)unreadCountForDisplay;
- (_Bool)shouldShowUnreadCount;
- (unsigned long long)serverMessageCount;
- (unsigned long long)localMessageCount;
- (unsigned long long)messageCount;
- (id)messageForMessageID:(id)arg1;
@property(retain, nonatomic) MFMailMessage *lastViewedMessage;
- (void)getLastViewedMessage:(id *)arg1 date:(id *)arg2;
- (id)defaultMessageForStyle:(unsigned long long)arg1;
- (id)conversationReferenceMessageToSelectFromMessage:(id)arg1 withDirection:(int)arg2;
- (id)messageToSelectFromMessage:(id)arg1 withDirection:(int)arg2;
- (id)messageToSelectAfterDeletedMessages:(id)arg1;
- (id)messageToSelectAfterDeletedMessage:(id)arg1;
- (void)_currentMessage:(id)arg1 removedWithMessageToSelect:(id)arg2;
@property(nonatomic) int lastChangeDirection;
@property(retain, nonatomic) MFMailMessage *currentMessage;
- (id)messageAtFlattenedIndex:(unsigned long long)arg1;
- (id)tableIndexPathOfMessageCollection:(id)arg1;
- (id)tableIndexPathOfMessageCollectionHash:(long long)arg1;
- (id)tableIndexPathOfMessageCollectionContainingMessageInfo:(id)arg1;
- (id)tableIndexPathOfMessageCollectionContainingMessage:(id)arg1;
- (id)tableIndexPathOfMessageOrMessageCollection:(id)arg1;
- (id)_tableIndexPathOfMessageOrCollectionForInfo:(id)arg1 collectionMustContainMessage:(_Bool)arg2;
- (unsigned long long)flattenedIndexOfWhereMessageShouldGo:(id)arg1;
- (unsigned long long)flattenedIndexOfMessage:(id)arg1;
- (id)messagesIncludingDuplicateForMessages:(id)arg1 removalTest:(CDUnknownBlockType)arg2;
- (id)messageInfosIncludingDuplicateForMessageInfos:(id)arg1 removalTest:(CDUnknownBlockType)arg2;
- (id)messagesIncludingDuplicatesForMessages:(id)arg1;
- (CDUnknownBlockType)removalTestForExcludedMailboxTypes;
- (_Bool)_anySourceRepresentsMailboxUidType:(int)arg1;
- (id)_messageInfosForConversationID:(long long)arg1;
- (id)messagesForConversationWithID:(long long)arg1;
- (id)bulletinsContexts;
- (id)_sourceForMessageInfo:(id)arg1;
- (id)_cachedMessageForMessageInfo:(id)arg1;
- (id)_messageForMessageInfo:(id)arg1 cache:(_Bool)arg2;
- (id)messageForMessageInfo:(id)arg1;
- (id)_copyAllMessageInfos;
- (id)copyAllMessages;
- (_Bool)containsMessage:(id)arg1;
- (id)conversationContainingMessage:(id)arg1;
- (id)_tableIndexPathOfOldestMessageInSource:(id)arg1;
- (id)_tableIndexPathOfConversationWithID:(long long)arg1;
- (id)tableIndexPathOfMessageInfo:(id)arg1;
- (id)tableIndexPathOfMessage:(id)arg1;
- (void)getIndex:(unsigned long long *)arg1 andCount:(unsigned long long *)arg2 ofMessageInConversation:(id)arg3;
- (id)messageCollectionContainingMessage:(id)arg1;
- (unsigned long long)messageCountForCollectionWithMessage:(id)arg1;
- (unsigned long long)messageCountAtTableIndexPath:(id)arg1;
- (id)sourcesForMessagesAtTableIndexPath:(id)arg1;
- (long long)messageCollectionHashAtIndexPath:(id)arg1;
- (id)messageCollectionAtTableIndexPath:(id)arg1;
- (id)messageInfosAtTableIndexPath:(id)arg1;
- (id)messagesAtTableIndexPath:(id)arg1;
- (id)messageAtTableIndexPath:(id)arg1;
- (void)getSourceStateHasUnread:(_Bool *)arg1 hasUnflagged:(_Bool *)arg2;
- (void)getConversationStateAtTableIndexPath:(id)arg1 hasUnread:(_Bool *)arg2 hasUnflagged:(_Bool *)arg3;
- (void)_nts_getConversationStateFromNewestMessageInfo:(id)arg1 shouldCollect:(_Bool)arg2 hasUnread:(_Bool *)arg3 hasUnflagged:(_Bool *)arg4;
- (void)updateEntry:(id)arg1 atTableIndexPath:(id)arg2 addressList:(id *)arg3 options:(unsigned long long)arg4 entryStyle:(unsigned long long)arg5;
- (id)_indexPathForMessageInfoIndex:(unsigned long long)arg1;
- (id)_visibleMessageInfoAtIndexPath:(id)arg1;
- (id)_messageInfoAtIndexPath:(id)arg1;
- (unsigned long long)_messageInfoIndexForIndexPath:(id)arg1;
@property(readonly, nonatomic) unsigned long long numberOfSections;
@property(copy, nonatomic) CDUnknownBlockType comparator; // @synthesize comparator=_comparator;
- (void)_purgeCachedSendersWithReason:(id)arg1;
- (void)_purgeCachedMessageInfosWithReason:(id)arg1;
- (void)loadMoreMessagesWithMaxVisibleIndexPath:(id)arg1;
- (void)_loadMoreMessagesWithContext:(id)arg1;
- (void)loadOlderMessages;
- (void)growFetchWindowForSources:(id)arg1;
- (_Bool)shouldGrowFetchWindowForSource:(id)arg1;
- (id)maximumIndexPathsBySource;
- (void)_invalidateMaximumIndexPathsBySource;
- (_Bool)isGrowingFetchWindowForSource:(id)arg1;
- (_Bool)isGrowingFetchWindowForAnySource;
- (_Bool)_nts_isGrowingFetchWindowForAnySource;
- (id)_nts_growingMailboxActivityMonitorForSource:(id)arg1;
- (void)_cancelGrowingMailboxes;
- (void)_notifyGrowingMailboxesChanged;
- (void)_checkForNewMailAndNotifyOnFailure:(_Bool)arg1;
- (void)_checkForNewMailAndNotifyOnFailureBackground:(_Bool)arg1 userRefresh:(_Bool)arg2 foregroundRequest:(_Bool)arg3 sourcesToCheck:(id)arg4 remoteID:(id)arg5;
- (id)currentRemoteIDForMailbox:(id)arg1;
- (void)checkForNewMailAndNotifyOnFailure:(_Bool)arg1 userRefresh:(_Bool)arg2;
- (void)_fetchCompleted:(id)arg1;
- (void)_clearFetchActivity;
- (void)trackFetchVisibleMailbox:(id)arg1 activity:(id)arg2 options:(unsigned long long)arg3;
- (id)sourceForMailbox:(id)arg1;
- (void)replaceAllSourcesWith:(id)arg1;
- (id)sources;
- (void)removeAllSources;
- (void)addSource:(id)arg1;
- (void)enqueueWork:(CDUnknownBlockType)arg1;
- (void)withGroup:(id)arg1 enqueueWork:(CDUnknownBlockType)arg2;
- (void)resume;
- (void)suspend;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)initWithObserver:(id)arg1 tag:(unsigned long long)arg2;
- (void)dealloc;
- (id)fetchActivity;
- (unsigned long long)threadedCount;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

